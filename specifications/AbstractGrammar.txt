CATEGORIES

expression;
definition;
statement;
type;

NODES

program -> definition*;

varDefinition:definition -> string type;
structDefinition:definition -> string field*;
functionDefinition:definition -> string parameter* type? definition* statement*;

field -> string type;
parameter -> string type;

print:statement -> expression;
read:statement -> expression;
call:statement -> expression;
assignment:statement -> left:expression right:expression;
conditional:statement -> expression ifStatements:statement* elseStatements:statement*;
while:statement -> expression loopStatements:statement*;
return:statement -> expression?;

intType:type -> ;
floatType:type -> ;
charType:type -> ;
arrayType:type -> int type;
structType:type -> string;

variable:expression -> string;
intLiteral:expression -> int;
floatLiteral:expression -> float;
charLiteral:expression -> char;
functionCall:expression -> string expression*;
structAccess:expression -> e:expression string;
arrayAccess:expression -> left:expression right:expression;
cast:expression -> type expression;
arithmetic:expression -> left:expression operator:string right:expression;
Logic:expression -> left:expression operator:string right:expression;
logicAnd:expression -> left:expression right:expression;
logicOr:expression -> left:expression right:expression;
logicNot:expression -> expression;
